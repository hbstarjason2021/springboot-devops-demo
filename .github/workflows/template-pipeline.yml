name: template-pipeline

on:
  workflow_dispatch:
  #push:
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  job1-ubuntu:
    runs-on: ubuntu-latest
    permissions: write-all
    
    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_DB: postgres_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379/tcp   
    
    
    steps:
      - name: step1-ubuntu
        #uses: actions/checkout@v3
        run: |
          uname -a 
      - name: step2-ubuntu
        run: |
          cat /etc/os-release
          echo "==== this is job1-ubuntu"
          netstat -pltn
          
      #- name: Connect to PostgreSQL
      #  run: | 
      #   XXXX
      #  env:
      #    POSTGRES_HOST: postgres
      #    POSTGRES_PORT: 5432
      - name: Test Connect PostgreSQL
        run: |
          apt update -y 
          apt-get install --yes postgresql-client
          psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'
        env:
          PGPASSWORD: postgres_password
         
      
      #- name: Send mail
      #  uses: dawidd6/action-send-mail@v3
      #  with:
      #    server_address: smtp.example.com
      #    server_port: 587
      #    username: ${{secrets.MAIL_USERNAME}}
      #    password: ${{secrets.MAIL_PASSWORD}}
      #    subject: XX-service 线上部署通知
      #    to: demo@example.com
      #    body: 已经成功将 ${{github.repository}} 仓库的 ${{github.event.inputs.branchname}} 分支部署到线上，位于 ${{matrix.servers}} 服务器。
      #    convert_markdown: true          
          
 
  job-ubuntu:
     runs-on: ubuntu-latest
     needs: job1-ubuntu
     permissions: write-all
     steps:
      - name: step1-ubuntu
        #uses: actions/checkout@v3
        run: |
          uname -a 
      - name: step2-ubuntu
        run: |
          cat /etc/os-release
          echo "===== cpuinfo ======="
          cat /proc/cpuinfo
          echo "===== meminfo ======="
          cat /proc/meminfo
          echo "===== free ======="
          free -m -h
          echo "===== df ======="
          df -h
          echo "===== public ip ======="
          curl ip.sb
 
  job2-ubuntu2-python:
    runs-on: ubuntu-latest
    needs: job1-ubuntu
    steps:
      - name: step1-ubuntu
        uses: actions/checkout@v3 
      - name: Install python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          #cache: 'pip'
      - name: python info
        run: |
         python3 -verison

  job3-windows-go:
    runs-on: ubuntu-latest
    needs: job1-ubuntu
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Install golang
        uses: actions/setup-go@v3
        with:
         go-version: 1.19
      - name: go info 
        run: |
          go version
 
  job-darwin:
    runs-on: macos-latest
    permissions: write-all
    needs:
      #- job-ubuntu
      - job1-ubuntu
      - job2-ubuntu2-python
    steps:
      - name: step1-macos
        #uses: actions/checkout@v3
        run: |
          uname -a 
      - name: step2-macos
        run: |
          sw_vers
          top -l 1 | head -n 10 
          # top -l 1 | head -n 10 | grep PhysMem
          echo "===== public ip ======="
          curl ip.sb

  job5-darwin:
    runs-on: macos-latest
    permissions: write-all
    needs:
      - job-ubuntu
      #- job1-ubuntu
      #- job2-ubuntu2-python
    steps:
      - name: step1-macos
        #uses: actions/checkout@v3
        run: |
          uname -a 
      - name: step2-macos
        run: |
          sw_vers
          top -l 1 | head -n 10 
          # top -l 1 | head -n 10 | grep PhysMem
          echo "===== public ip ======="
          curl ip.sb

  job4-windows-nodejs:
    runs-on: windows-latest
    strategy:
      matrix:
        node: [ 14, 16, 18 ]
    permissions: write-all
    needs:
      - job1-ubuntu
      - job3-windows-go
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          #cache: 'yarn'
          #cache-dependency-path: 'ui/yarn.lock'
      - name: node info 
        run: |
          node -v 
  job6-darwin:
    runs-on: macos-latest
    permissions: write-all
    needs:
      #- job-ubuntu
      #- job1-ubuntu
      #- job2-ubuntu2-python
      - job-darwin
      - job4-windows-nodejs
      - job5-darwin
    steps:
      - name: step1-macos
        #uses: actions/checkout@v3
        run: |
          uname -a 
      - name: step2-macos
        run: |
          sw_vers
          top -l 1 | head -n 10 
          # top -l 1 | head -n 10 | grep PhysMem
          echo "===== public ip ======="
          curl ip.sb
